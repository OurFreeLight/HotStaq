<*
	await Hot.includeJS ("./HelloWorldIncludeJS.js");
*>
<!DOCTYPE html>
<html>

<head>
	<title>Hello World Page</title>

	<script type = "text/javascript">
		async function sayHello ()
		{
			if (Hot.Cookies.get ("test") != "23")
				throw new Error ("Cookies not working");

			const msg = "hi";

			let result = await Hot.apiCall ('/v1/hello_world/hello', {
					message: `${msg}` // Helps ensure that existing template strings still work.
				});
			document.getElementById ('buttonClicked').innerHTML = JSON.stringify (result);

			result = await Hot.apiCall ('/v1/hello_world/hello', {
					message: `${msg}`,
					throwErrorPls: true
				});
			document.getElementById ('APIResponse').innerHTML = JSON.stringify (result);
		}

		async function sayHelloDifferently ()
		{
			let api = Hot.CurrentPage.getAPI ();
			let result = await api.hello_world.hello ({ message: 'hi' });
			document.getElementById ('buttonClicked').innerHTML = JSON.stringify (result);
		}

		async function sayHelloButAuthorizedBad ()
		{
			let result = await Hot.API.hello_world_second.hello_again ({ message: 'hi' });
			document.getElementById ('testHelloWorldAPI3').innerHTML = JSON.stringify (result);
		}

		async function sayHelloButAuthorizedGood ()
		{
			Hot.API.bearerToken = "kjs1he4w57h:3u4j5n978sd";

			let result = await Hot.API.hello_world_second.hello_again ({ message: 'hi' });
			document.getElementById ('testHelloWorldAPI4').innerHTML = JSON.stringify (result);
		}

		function $(str)
		{
			// Do nothing, this is to test that jQuery calls that use $() do not cause issues.
		}

		(() =>
		{
			$("blap");
			Hot.Cookies.set ("test", "23");
			document.getElementById ('iifeTest').innerHTML = "IIFE Worked";
		})();

		window.onload = () =>
			{
				document.getElementById ('onload').innerHTML = "onload Worked";
			};
		document.addEventListener ('DOMContentLoaded', () =>
			{
				document.getElementById ('DOMContentLoaded').innerHTML = "DOMContentLoaded Worked";
			});
	</script>
</head>

<body>
<*
	Hot.echoUnsafe (`<button id = "helloWorld" onclick = "document.getElementById ('buttonClicked').innerHTML='Clicked';">Hello`);
*>
<*
	Hot.echoUnsafe (`World!</button><div id = "buttonClicked"></div>`);
*>
	<input id = "message" data-test = "${testData}" data-test2 = "!{Hot.echo ('test2data');}" ?("messageTestObjectName") value = "" />
	<button <* Hot.echo ("id = \"testHelloWorldAPI\"")
	*> onclick = "<(event) =>
		{
			sayHello ();
		}Ra>">Send</button>
	<button id = "${getTestHelloWorldAPI2Id ()}" onclick = "sayHelloDifferently ();">Send2</button>
	<button id = "testHelloWorldAPI2" onclick = "sayHelloDifferently ();">Send3</button>
	<button id = "funcClickTest" data-button-uuid = "3" onclick = "<(event) => 
	{
		await new Promise ((resolve, reject) =>
		{
			const uuid = this.getAttribute ('data-button-uuid');

			setTimeout (() =>
			{
				const buttonId = event.button;
				this.innerHTML = `ButtonClicked${buttonId}-${testData}-$\{uuid}`;
				resolve ();
			}, 20);
		});
	}a>">Click Event</button>
	<button id = "testHelloWorldAPI3" onclick = "sayHelloButAuthorizedBad ();">Auth Send - Bad Auth</button>
	<button id = "testHelloWorldAPI4" onclick = "sayHelloButAuthorizedGood ();">Auth Send - Good Auth</button>
<*
	await Hot.include ("./TestButton.hott", {
			Parent: testData
		});
*>
	<br /><br />
	<a href = "./TestingMochaSelenium">Router Testing-MochaSelenium Test</a>
	<*
		Hot.echoUnsafe (`<div id = "iifeTest"></div>`);
	*>
	<span id = "onload"></span><br />
	<span id = "DOMContentLoaded"></span><br />
	API Response: <span id = "APIResponse"></span>
</body>

</html>