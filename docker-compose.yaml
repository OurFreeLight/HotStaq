services:
  # Used just to make sure the database has started before continuing.
  init-database-mariadb:
    image: mariadb:10.10
    depends_on:
      hotsitetest-api:
        condition: service_healthy
    environment:
      MYSQL_ROOT_PASSWORD: cdO1KjwiC8ksOqCV1s0
      MYSQL_DATABASE: hotstaq
      MYSQL_USER: 5NKVBAt7OrzrumQyQVs
      MYSQL_PASSWORD: 1BBrZbKYRUM7oiMA5oY
    command: 
      - "exit 0"
    networks:
      - hotsitetest-network
    healthcheck:
      test: ["CMD", "/app/docker/hotsitetest/app/healthcheck.sh", "http://127.0.0.1:5001"]
      retries: 10
      timeout: 10s
    ports:
      - "${API_HTTP_PORT}:5001"
    environment:
      SERVER_TYPE: api
      LOG_LEVEL: all
      API_HTTP_PORT: 5001
      BASE_API_URL: "${BASE_API_URL}"
      DATABASE_SERVER: "hotsitetest-database"
      DATABASE_PORT: "3306"
      DATABASE_USERNAME: "${DATABASE_USERNAME}"
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      DATABASE_SCHEMA: "${DATABASE_SCHEMA}"

  hotsitetest-database:
    image: mariadb:11.6
    networks:
      - hotsitetest-network
    healthcheck:
      test: ["CMD", "mariadb-admin" ,"ping", "-h", "127.0.0.1"]
      retries: 10
      timeout: 10s
    volumes:
      - "hotsitetest-database-volume:/var/lib/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DATABASE_SCHEMA}"
      MYSQL_USER: "${DATABASE_USERNAME}"
      MYSQL_PASSWORD: "${DATABASE_PASSWORD}"

  init-database-postgres:
    image: postgres:${POSTGRES_VERSION}
    depends_on:
      database-postgres:
        condition: service_healthy
    command: 
      - "exit 0"
    networks:
      - hotstaq-build-network

  database-postgres:
    image: postgres:${POSTGRES_VERSION}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U 5NKVBAt7OrzrumQyQVs -d hotstaq -h localhost || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "${POSTGRES_DB_PORT}:5432"
    environment:
      POSTGRES_DB: hotstaq
      POSTGRES_USER: 5NKVBAt7OrzrumQyQVs
      POSTGRES_PASSWORD: 1BBrZbKYRUM7oiMA5oY
    networks:
      - hotstaq-build-network

  database-influxdb:
    image: influxdb:${INFLUXDB_VERSION}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/ping"]
      retries: 10
      timeout: 10s
    ports:
      - "${INFLUX_DB_PORT}:8086"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_ORG: freelight
      DOCKER_INFLUXDB_INIT_BUCKET: hotstaq
      DOCKER_INFLUXDB_INIT_USERNAME: 5NKVBAt7OrzrumQyQVs
      DOCKER_INFLUXDB_INIT_PASSWORD: 1BBrZbKYRUM7oiMA5oY
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: Ife0HerzHrloa32PsE4yg4ixA6j7tZFSMRhvBg7akUK2e
    networks:
      - hotstaq-build-network

  testing-selenium-chrome:
    image: selenium/standalone-chrome:${SELENIUM_VERSION}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4444/"]
      retries: 10
      timeout: 10s
    shm_size: "2g"
    environment:
      SE_NODE_MAX_SESSIONS: 5
    network_mode: "host"

  # Disabled for now...
  # testing-selenium-firefox:
  #   image: selenium/standalone-firefox:${SELENIUM_VERSION}
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:4444/"]
  #     retries: 10
  #     timeout: 10s
  #   shm_size: "2g"
  #   environment:
  #     SE_NODE_MAX_SESSIONS: 5
  #   network_mode: "host"

networks:
  hotsitetest-network: